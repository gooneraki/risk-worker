# Risk Worker Environment Configuration Example

# Usage:
# - For local development, copy the "Local Development" section to .env.local
# - For production, use the "Production" sections for .env.production (app) and .env.postgres (database)
# - NEVER commit your real .env files to version control

# =====================================================
# SCENARIO 1: Local Development (.env.local)
# =====================================================
# For running locally with SQLite and FakeRedis

# .env.local
DATABASE_URL=sqlite+aiosqlite:///./data/risk_worker.db
LOG_LEVEL=INFO
WORKER_NAME=risk-worker
LOG_FILE=logs/app.log
API_HOST=127.0.0.1
API_PORT=8000

# =====================================================
# SCENARIO 2: Production
# =====================================================

# a) App Environment (.env.production)
# For running in production with PostgreSQL and Redis

# .env.production
DATABASE_URL=postgresql+asyncpg://myuser:mypassword@postgres:5432/risk_worker
LOG_LEVEL=INFO
WORKER_NAME=risk-worker
LOG_FILE=logs/app.log
API_HOST=0.0.0.0
API_PORT=8000

# b) Database Environment (.env.postgres)
# Used by the postgres service in docker-compose.yml

# .env.postgres
POSTGRES_DB=risk_worker
POSTGRES_USER=myuser
POSTGRES_PASSWORD=mypassword

# =====================================================
# Notes
# =====================================================
# - For production, set strong, unique values for POSTGRES_USER and POSTGRES_PASSWORD.
# - The DATABASE_URL in .env.production must match the credentials in .env.postgres.
# - Redis vs FakeRedis is auto-detected: if Redis is running, it will be used; otherwise, FakeRedis is used.
# - NEVER commit your real .env files to version control. Only commit this example file. 